{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","placeholder","onClick","toggleMode","htmlFor","TextForm","console","log","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","Heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","capital","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.27437b71.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success mx-3\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label mx-3 \"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  //alert(props);\r\n  console.log(\"test\", props);\r\n  const handleUpClick = () => {\r\n    // console.log(\"UpperCase was Clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    console.log(\"LowerCase was Clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\" \");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1>{props.Heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"mybox\" className=\"form-label\"></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert To UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-5\" onClick={handleLowClick}>\r\n          Convert To LowerCase\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3 \"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n      >\r\n        <h1>Your text Summary</h1>\r\n        <p>\r\n          Words {text.split(\" \").length} and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter Something to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capital = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capital(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n\n        {/* <Route */}\n        {/* exact\n              path=\"/\"\n              element={ */}\n        <TextForm\n          showAlert={showAlert}\n          Heading=\"Enter the text to analyze below\"\n          mode={mode}\n        />\n        {/* }\n            // ></Route> */}\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}